/*pipeline {
    agent {
        docker {
            image 'node:6-alpine'
            args '-p 3000:3000'
        }
    }
    environment {
        CI = 'true'
    }
    stages {
        stage('Build') {
            steps {
                sh 'npm install'
            }
        }
        stage('Test') {
            steps {
                sh './jenkins/scripts/test.sh'
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
                input message: 'Finished using the web site? (Click "Proceed" to continue)'
                sh './jenkins/scripts/kill.sh'
            }
        }
    }
}*/


podTemplate(
        name: 'test-pod',
        label: 'test-pod',
        containers: [
                containerTemplate(name: 'golang', image: 'golang:1.9.4-alpine3.7'),
                containerTemplate(name: 'docker', image: 'trion/jenkins-docker-client'),
        ],
        volumes: [
                hostPathVolume(mountPath: '/var/run/docker.sock',
                        hostPath: '/var/run/docker.sock')
        ],
        {
            //node = the pod label
            node('test-pod') {
                //container = the container label
                stage('Build') {
                    container('golang') {
                        // This is where we build our code.
                    }
                }
                stage('Build Docker Image') {
                    container('docker') {
                        // This is where we build the Docker image
                    }
                }
            }
        })
